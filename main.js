!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button-submit",inactiveButtonClass:"modal__button-submit_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__input_error_visible"},t=(e,t,r)=>{const n=e.querySelector(`#${t.id}-error`);n.textContent="",n.classList.remove(r.errorClass),t.classList.remove(r.inputErrorClass)},r=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?o(t,r):n(t,r)},n=(e,t)=>{e.classList.remove(t.inactiveButtonClass),e.disabled=!1},o=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0};const a=document.querySelector("#edit-avatar-modal"),s=document.querySelector("#edit-avatar-form"),l=document.querySelector("#edit-avatar-link-input"),d=document.querySelector(".profile__avatar"),i=document.querySelector(".profile__edit-btn"),c=document.querySelector("#profile-form"),u=document.querySelector(".profile__name"),m=document.querySelector("#edit-modal"),h=document.querySelector("#profile-name-input"),_=document.querySelector(".profile__description"),f=document.querySelector("#profile-description-input");let p;const v=document.querySelector(".profile__new-post-btn"),y=document.querySelector("#add-card-modal"),S=document.querySelector("#add-card-form"),b=document.querySelector("#profile-add-card-link-input"),q=document.querySelector("#profile-add-card-caption-input"),C=document.querySelector("#card-preview-modal"),k=document.querySelector(".modal__image-preview"),L=document.querySelector(".modal__image-caption"),E=document.querySelector("#card-template"),g=document.querySelector(".cards__list");let x=null,U=null;const $=document.querySelectorAll(".modal"),A=document.querySelectorAll(".modal__button-close"),w=document.querySelector("#confirm-delete-modal"),R=w.querySelector(".modal__button-delete"),I=w.querySelector(".modal__button-cancel"),D=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleResponse)}getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleResponse)}editUserInfo(e){let{name:t,about:r}=e;return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then(this._handleResponse)}addNewCard(e,t){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._handleResponse)}deleteCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._handleResponse)}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}editAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"7cf900fc-9f66-4afe-b1f0-09f480f95933","Content-Type":"application/json"}});function T(e){"Escape"===e.key&&P(document.querySelector(".modal_opened"))}function N(e){e.classList.add("modal_opened"),document.addEventListener("keydown",T)}function P(e){e.classList.remove("modal_opened"),document.removeEventListener("keydown",T)}function B(e){const t=E.content.querySelector(".card").cloneNode(!0),r=t.querySelector(".card__title"),n=t.querySelector(".card__image"),o=t.querySelector(".card__like-button"),a=t.querySelector(".card__delete-button");return r.textContent=e.name,n.src=e.link,n.alt=e.name,e.likes.some((e=>e._id===p))&&o.classList.add("card__like-button_liked"),o.addEventListener("click",(()=>{(o.classList.contains("card__like-button_liked")?D.removeLike(e._id):D.addLike(e._id)).then((()=>{o.classList.toggle("card__like-button_liked")})).catch((e=>{console.error("Failed to like photo:",e)}))})),n.addEventListener("click",(()=>{k.src=e.link,k.alt=e.name,L.textContent=e.name,N(C)})),a.addEventListener("click",(()=>{x=t,U=e._id,R.onclick=()=>{U&&x&&(R.textContent="Deleting...",D.deleteCard(U).then((()=>{x.remove(),P(w),x=null,U=null})).catch(console.error).finally((()=>{R.textContent="Delete"})))},I.onclick=()=>{P(w)},N(w)})),t}var O;D.getAppInfo().then((e=>{let[t,r]=e;p=r._id,t.forEach((e=>{const t=B(e);g.prepend(t)})),d.src=r.avatar,u.textContent=r.name,_.textContent=r.about})).catch(console.error),$.forEach((e=>{e.addEventListener("mousedown",(t=>{(t.target.classList.contains("modal")||t.target.classList.contains("modal__button-close"))&&P(e)}))})),A.forEach((e=>{e.addEventListener("click",(()=>{P(e.closest(".modal"))}))})),d.addEventListener("click",(()=>{l.value=d.src,N(a)})),s.addEventListener("submit",(function(e){e.preventDefault();const t=l.value,r=e.submitter;r.textContent="Saving...",D.editAvatar(t).then((e=>{d.src=e.avatar,P(a)})).catch(console.error).finally((()=>{r.textContent="Save"}))})),i.addEventListener("click",(()=>{var r,n;h.value=u.textContent,f.value=_.textContent,r=c,n=e,[h,f].forEach((e=>{t(r,e,n)})),N(m)})),c.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;t.textContent="Saving...",D.editUserInfo({name:h.value,about:f.value}).then((e=>{u.textContent=e.name,_.textContent=e.about,P(m)})).catch(console.error).finally((()=>{t.textContent="Save"}))})),v.addEventListener("click",(()=>{N(y)})),S.addEventListener("submit",(function(t){t.preventDefault();const r=t.submitter;r.textContent="Saving...",D.addNewCard(q.value,b.value).then((r=>{const n=B({name:r.name,link:r.link,_id:r._id});g.prepend(n),P(y),S.reset(),o(t.submitter,e)})).catch(console.error).finally((()=>{r.textContent="Save"}))})),O=e,document.querySelectorAll(O.formSelector).forEach((e=>{((e,n)=>{const o=Array.from(e.querySelectorAll(n.inputSelector)),a=e.querySelector(n.submitButtonSelector);r(o,a,n),o.forEach((s=>{s.addEventListener("input",(function(){((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`#${t.id}-error`);o.textContent=r,o.classList.add(n.errorClass),t.classList.add(n.inputErrorClass)})(e,r,r.validationMessage,n)})(e,s,n),r(o,a,n)}))}))})(e,O)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,